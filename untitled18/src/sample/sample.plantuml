@startuml

title __SAMPLE's Class Diagram__\n

  namespace sample {
    interface sample.AbstractFactory {
        {abstract} + CreateArrow()
    }
  }
  

  namespace sample {
    abstract class sample.AbstractProductArrow {
        ~ color : Color
        ~ endX : double
        ~ endY : double
        ~ startX : double
        ~ startY : double
        ~ width : double
        + clone()
        {abstract} + draw()
        + getColor()
        + getEndX()
        + getEndY()
        + getStartX()
        + getStartY()
        + getWidth()
        + setColor()
        + setEndX()
        + setEndY()
        + setStartX()
        + setStartY()
        + setWidth()
    }
  }
  

  namespace sample {
    class sample.ActiveObj {
        + ActiveObj()
        + draw()
        + draw_for_list()
        + getPicture()
    }
  }
  

  namespace sample {
    class sample.ArrowAssociation {
        ~ arrowHeadSize : double
        + ArrowAssociation()
        + draw()
        + drawArrowend()
        + drawArrowstart()
        + drawLine()
        + setEndPoint()
        + setStartPoint()
        + toString()
    }
  }
  

  namespace sample {
    class sample.ArrowCell {
        + updateItem()
    }
  }
  

  namespace sample {
    class sample.ArrowDependence {
        ~ arrowHeadSize : double
        + ArrowDependence()
        + draw()
        + drawArrowend()
        + drawArrowstart()
        + drawLine()
        + setEndPoint()
        + setStartPoint()
        + toString()
    }
  }
  

  namespace sample {
    class sample.ArrowFour {
        ~ arrowHeadSize : double
        + ArrowFour()
        + draw()
        + drawArrowend()
        + drawArrowstart()
        + drawLine()
        + setEndPoint()
        + setStartPoint()
        + toString()
    }
  }
  

  namespace sample {
    class sample.Component {
        + Component()
        + draw()
        + draw_for_list()
        + getPicture()
    }
  }
  

  namespace sample {
    class sample.Controller {
        ~ item : ObservableList<Shape>
        ~ item2 : ObservableList<AbstractProductArrow>
        ~ label : Label
        ~ listForArray : ListView
        ~ listboxforfigure : ListView
        ~ panels : Pane
        + AroowEnd()
        + ArrowStart()
        + clear()
        + clearSelect()
        + drawShapes()
        + initialize()
    }
  }
  

  namespace sample {
    class sample.FactoryAssociation {
        + CreateArrow()
    }
  }
  

  namespace sample {
    class sample.FactoryDependence {
        + CreateArrow()
    }
  }
  

  namespace sample {
    class sample.FactoryFour {
        + CreateArrow()
    }
  }
  

  namespace sample {
    class sample.Main {
        {static} + main()
        + start()
    }
  }
  

  namespace sample {
    class sample.Nodes {
        + Nodes()
        + draw()
        + draw_for_list()
        + getPicture()
    }
  }
  

  namespace sample {
    class sample.Obj {
        + Obj()
        + draw()
        + draw_for_list()
        + getPicture()
    }
  }
  

  namespace sample {
    abstract class sample.Shape {
        # h : double
        # style : String
        # w : double
        # x : double
        # y : double
        ~ name : String
        ~ prefix : Character
        ~ type : String
        + clone()
        {abstract} + draw()
        {abstract} + draw_for_list()
        {abstract} + getPicture()
        + toString()
    }
  }
  

  namespace sample {
    class sample.ShapeCell {
        + updateItem()
    }
  }
  

  sample.AbstractProductArrow .up.|> java.lang.Cloneable
  sample.ActiveObj -up-|> sample.Shape
  sample.ArrowAssociation .up.|> java.lang.Cloneable
  sample.ArrowAssociation -up-|> sample.AbstractProductArrow
  sample.ArrowCell -up-|> javafx.scene.control.ListCell
  sample.ArrowDependence .up.|> java.lang.Cloneable
  sample.ArrowDependence -up-|> sample.AbstractProductArrow
  sample.ArrowFour .up.|> java.lang.Cloneable
  sample.ArrowFour -up-|> sample.AbstractProductArrow
  sample.Component -up-|> sample.Shape
  sample.Controller o-- sample.AbstractProductArrow : new_arrow
  sample.FactoryAssociation .up.|> sample.AbstractFactory
  sample.FactoryDependence .up.|> sample.AbstractFactory
  sample.FactoryFour .up.|> sample.AbstractFactory
  sample.Main -up-|> javafx.application.Application
  sample.Nodes -up-|> sample.Shape
  sample.Obj -up-|> sample.Shape
  sample.Shape .up.|> java.lang.Cloneable
  sample.ShapeCell -up-|> javafx.scene.control.ListCell


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
